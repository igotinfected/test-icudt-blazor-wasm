<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

	<PropertyGroup>
		<TargetFramework>net7.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<BlazorWebAssemblyLoadAllGlobalizationData>true</BlazorWebAssemblyLoadAllGlobalizationData>
		<!--<BlazorCacheBootResources>false</BlazorCacheBootResources>-->
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="7.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="7.0.1" PrivateAssets="all" />
	</ItemGroup>


	<!-- AFAIK there is no need to hook into the publish process, that should work automatically but I have not tested it -->
	<Target Name="_ReplaceICU" AfterTargets="ResolveRuntimePackAssets">
		<Message Text="Replacing 'icudt.dat' file..." Importance="High" />

		<ItemGroup>
			<!-- Generate an item to match the item we need to remove from "ReferenceCopyLocalPaths" -->
			<ToRemove Include="toRemove">
				<DestinationSubPath>icudt.dat</DestinationSubPath>
			</ToRemove>

			<!-- Use said item to match against the real item we want to remove -->
			<ReferenceCopyLocalPaths Remove="@(ToRemove)" MatchOnMetadata="DestinationSubPath"/>

			<!-- Now add the custom "icudt.dat" file -->
			<ReferenceCopyLocalPaths Include="$(MSBuildThisFileDirectory)icudt.dat"
									 DestinationSubPath="icudt.dat" />
		</ItemGroup>
	</Target>
</Project>
